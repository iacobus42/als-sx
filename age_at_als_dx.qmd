---
title: Age at First Diagnosis
author: Jacob Simmering
format: 
  html:
    embed-resources: true
---


```{r pkg-load}
library(tidyverse)
library(survival)
library(patchwork)
library(viridis)
```

Living in an MSA seeks to be consistently associated with lower negative effects
of having a diagnosis for one of the ALS risk factors. One possible cause
of this may be people living in MSAs being diagnosed with ALS earlier on in
their disease course. One way to look at this would be to check the age at 
first diagnosis of ALS. 

```{r}
if (Sys.info()["sysname"] == "Darwin") {
  model_data <- read_rds("/Volumes/lss_jsimmeri/als/model_data.rds")
} else {
  model_data <- read_rds("/Shared/lss_jsimmeri/als/model_data.rds")
}

model_data <- model_data |>
  mutate(
    age = first_year - dobyr,
    female = sex == 1,
    stratum = as.numeric(as.factor(glue::glue("{first_year}-{last_year}-{dobyr}-{sex}")))
  ) |>
  mutate(any_sx = motor | bulbar,
         n_groups = motor + bulbar,
         n_bulbar = speech + swallowing,
         n_motor = strength + gait + involuntary_movement + pain + other + falls,
         n_total = speech + swallowing + strength + gait + involuntary_movement + pain + other + falls)
```

Living in an MSA is associated with an younger age at diagnosis:

```{r}
panel_a <- survfit(
  Surv(age, als) ~ lives_in_msa,
  data = model_data
) |>
  broom::tidy() |>
  mutate(
    strata = ifelse(strata == "lives_in_msa=TRUE", "Urban Area", "Non-Urban Area")
  ) |>
  ggplot(
    aes(x = time, y = estimate, 
        ymin = conf.low, ymax = conf.high,
        color = forcats::fct_rev(strata), fill = forcats::fct_rev(strata))
  ) +
  geom_step() + 
  theme_minimal() +
  labs(x = "Age in Years", y = "ALS-Free Survival", color = "", fill = "") +
  theme(legend.position = c(0.25, 0.25))
panel_a
```

Likewise, having symptoms lowers age:

```{r}
panel_b <- survfit(
  Surv(age, als) ~ any_sx,
  data = model_data
) |>
  broom::tidy() |>
  mutate(
    strata = ifelse(strata == "any_sx=TRUE", "Has Symptoms", "Does Not Have Symptoms")
  ) |>
  ggplot(
    aes(x = time, y = estimate, 
        ymin = conf.low, ymax = conf.high,
        color = forcats::fct_rev(strata), fill = forcats::fct_rev(strata))
  ) +
  geom_step() + 
  theme_minimal() +
  labs(x = "Age in Years", y = "ALS-Free Survival", color = "", fill = "") +
  theme(legend.position = c(0.25, 0.25))
panel_b
```

Which is interactive between MSA and symptoms:

```{r}
panel_d <- survfit(
  Surv(age, als) ~ any_sx + lives_in_msa,
  data = model_data
) |>
  broom::tidy() |>
  mutate(
    msa = ifelse(stringr::str_detect(strata, "msa=TRUE"), "Urban Area", "Non-Urban Area"),
    sx = ifelse(stringr::str_detect(strata, "sx=TRUE"), "Has Symptoms", "Does Not Have Symptoms")
  ) |>
  ggplot(
    aes(x = time, y = estimate, 
        ymin = conf.low, ymax = conf.high,
        color = sx, fill = sx, linetype = msa, group = paste0(sx, msa))
  ) + 
  geom_step() + 
  theme_minimal() +
  labs(x = "Age in Years", y = "ALS-Free Survival", color = "", fill = "") +
  theme(legend.position = c(0.25, 0.25))
panel_d
```

And there is a dose response pattern:

```{r}
panel_c <- survfit(
  Surv(age, als) ~ n_total_topcoded,
  data = model_data |>
    mutate(
      n_total_topcoded = case_when(
        n_total <= 4 ~ as.character(n_total),
        n_total > 4 ~ "5+"
      )
    )
) |> 
  broom::tidy() |>
  mutate(
    strata = stringr::str_extract(strata, "[0-8]"),
    strata = ifelse(strata == "5", glue::glue("{strata}+"), strata)
  ) |>
  ggplot(
    aes(x = time, y = estimate, 
        ymin = conf.low, ymax = conf.high,
        color = strata, fill = strata)
  ) +
  geom_step() +
  theme_minimal() +
  labs(x = "Age in Years", y = "ALS-Free Survival", color = "", fill = "") +
  theme(legend.position = c(0.25, 0.25))
panel_c
```

As a single graph:

```{r}
(panel_a | panel_b) / (panel_c | panel_d) + 
  plot_annotation(tag_levels = c("A", "B", "C", "D"))
ggsave("~/projects/als-sx/surv_fig.svg", width = 8, height = 8)
```

Testing whether these are multiplicative/addictive or have overlap:

```{r}
coxph(
  Surv(age, als) ~ rate_outpatient_visits + intensity_outpatient_visits_dx + 
                   rate_inpatient_stays + intensity_inpatient_stays_los +
                   elix_CHF + elix_Valvular + elix_PHTN + elix_PVD + elix_HTN +
                   elix_HTNcx + elix_Paralysis + elix_NeuroOther + 
                   elix_Pulmonary + elix_DM + elix_DMcx + elix_Hypothyroid + 
                   elix_Renal + elix_Liver + elix_PUD + elix_HIV + 
                   elix_Lymphoma + elix_Mets + elix_Tumor + elix_Rheumatic + 
                   elix_Coagulopathy + elix_Obesity + elix_WeightLoss + 
                   elix_FluidsLytes + elix_BloodLoss + elix_Anemia + 
                   elix_Alcohol + elix_Drugs + elix_Psychoses + 
                   elix_Depression + 
                   as.factor(any_sx) * lives_in_msa + 
                   strata(stratum),
  data = model_data,
  robust = TRUE,
  cluster = stratum
) |> 
  broom::tidy(exponentiate = TRUE, conf.int = TRUE) |>
  select(term, estimate, conf.low, conf.high) |>
  knitr::kable(digits = 2)
```

And the dose-response:

```{r}
coxph(
  Surv(age, als) ~ rate_outpatient_visits + intensity_outpatient_visits_dx + 
                   rate_inpatient_stays + intensity_inpatient_stays_los +
                   elix_CHF + elix_Valvular + elix_PHTN + elix_PVD + elix_HTN +
                   elix_HTNcx + elix_Paralysis + elix_NeuroOther + 
                   elix_Pulmonary + elix_DM + elix_DMcx + elix_Hypothyroid + 
                   elix_Renal + elix_Liver + elix_PUD + elix_HIV + 
                   elix_Lymphoma + elix_Mets + elix_Tumor + elix_Rheumatic + 
                   elix_Coagulopathy + elix_Obesity + elix_WeightLoss + 
                   elix_FluidsLytes + elix_BloodLoss + elix_Anemia + 
                   elix_Alcohol + elix_Drugs + elix_Psychoses + 
                   elix_Depression + 
                   as.factor(n_total_topcoded) * lives_in_msa + 
                   strata(stratum),
  data = model_data |>
      mutate(
        n_total_topcoded = case_when(
          n_total <= 4 ~ as.character(n_total),
          n_total > 4 ~ "5+"
        )
    ),
  robust = TRUE,
  cluster = stratum
) |> 
  broom::tidy(exponentiate = TRUE, conf.int = TRUE) |>
  select(term, estimate, conf.low, conf.high) |>
  knitr::kable(digits = 2)
```
